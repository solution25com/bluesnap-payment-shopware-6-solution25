!function(){"use strict";var n={};n.p="bundles/bluesnap/",window?.__sw__?.assetPath&&(n.p=window.__sw__.assetPath+"/bundles/bluesnap/"),function(){let{Component:n}=Shopware,{Criteria:a}=Shopware.Data;Shopware.Component.override("sw-order-detail-general",{template:'{% block sw_order_detail_general %}\n    <sw-card v-if="transactionFound">\n        <div>\n            <h2>Bluesnap Detail</h2>\n\n            <div v-if="isLoading">\n                <sw-loader />\n            </div>\n\n            <div v-else>\n                <p><strong>Bluesnap Transaction ID:</strong> {{ orderTransactionId }}</p>\n            </div>\n        </div>\n    </sw-card>\n\n    {% parent %}\n{% endblock %}\n',inject:["repositoryFactory"],data(){return{orderTransactionId:null,isLoading:!0,transactionFound:!0}},created(){this.loadTransaction()},methods:{loadTransaction(){let n=this.$route.params.id||this.order?.id,t=this.repositoryFactory.create("bluesnap_transaction"),r=new a;r.addFilter(a.equals("orderId",n)),this.isLoading=!0,this.transactionFound=!0,t.search(r,Shopware.Context.api).then(n=>{if(n.total>0){console.log("response here:",n);let a=n.first();this.orderTransactionId=a.transactionId}else this.orderTransactionId="Not found",this.transactionFound=!1}).catch(()=>{this.orderTransactionId="Error",this.transactionFound=!1}).finally(()=>{this.isLoading=!1})}}})}()}();